body {
	$bg-color-factor: attr(bg-color-factor number, 0) !global;
}
$bg-color-factor-num: to-number($bg-color-factor);
$primary-color: lighten(#444, $bg-color-factor-num);
$secondary-color: #b7a57a;

@mixin easeOut {
	transition: all 0.5s ease-out;
}

// Set text color

@function setTextColor($color) {
	@if (lightness($color) > 40) {
		@return #000;
	} @else {
		@return #fff;
	}
}

// Media query mixins
@mixin mediaSm {
	@media screen and (min-width: 400px) and (max-width: 500px) {
		@content;
	}
}

@mixin mediaMd {
	@media screen and (min-width: 501px) and (max-width: 768px) {
		@content;
	}
}

@mixin mediaLg {
	@media screen and (min-width: 769px) and (max-width: 1170px) {
		@content;
	}
}

@mixin mediaXL {
	@media screen and (min-width: 1171px) {
		@content;
	}
}

/// String to number converter
/// @author Hugo Giraudel
/// @access private
////

///
/// Casts a string into a number
///
/// @param {String | Number} $value - Value to be parsed
///
/// @return {Number}
///
@function to-number($value) {
	@if type-of($value) == "number" {
		@return $value;
	} @else if type-of($value) != "string" {
		$_: log("Value for `to-number` should be a number or a string.");
	}

	$result: 0;
	$digits: 0;
	$minus: str-slice($value, 1, 1) == "-";
	$numbers: (
		"0": 0,
		"1": 1,
		"2": 2,
		"3": 3,
		"4": 4,
		"5": 5,
		"6": 6,
		"7": 7,
		"8": 8,
		"9": 9
	);

	@for $i from if($minus, 2, 1) through str-length($value) {
		$character: str-slice($value, $i, $i);

		@if not(index(map-keys($numbers), $character) or $character == ".") {
			@return to-length(if($minus, -$result, $result), str-slice($value, $i));
		}

		@if $character == "." {
			$digits: 1;
		} @else if $digits == 0 {
			$result: $result * 10 + map-get($numbers, $character);
		} @else {
			$digits: $digits * 10;
			$result: $result + map-get($numbers, $character) / $digits;
		}
	}

	@return if($minus, -$result, $result);
}